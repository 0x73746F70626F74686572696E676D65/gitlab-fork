- api_awards_path = local_assigns.fetch(:api_awards_path, nil)

- if api_awards_path
  .gl-display-flex.gl-flex-wrap.gl-justify-content-space-between.gl-pt-3
    #js-vue-awards-block{ data: { path: api_awards_path, can_award_emoji: can?(current_user, :award_emoji, awardable).to_s } }
    = yield
- else
  - grouped_emojis = awardable.grouped_awards(with_thumbs: inline)
  .awards.js-awards-block{ class: ("hidden" if !inline && grouped_emojis.empty?), data: { award_url: toggle_award_url(awardable) } }
    - awards_sort(grouped_emojis).each do |emoji, awards|
      = render Pajamas::ButtonComponent.new(button_options: { class: "#{award_state_class(awardable, awards, current_user)} award-control js-emoji-btn", title: award_user_list(awards, current_user), data: { toggle: 'tooltip', container: 'body' } }) do
        = emoji_icon(emoji)
        %span.award-control-text.js-counter
          = awards.count

    - if can?(current_user, :award_emoji, awardable)
      .award-menu-holder.js-award-holder
        = render Pajamas::ButtonComponent.new(button_text_classes: 'gl-display-flex', button_options: { title: _('Add reaction'), class: 'js-add-award award-control has-tooltip', 'aria-label': _('Add reaction') }) do
          = sprite_icon('slight-smile', css_class: 'award-control-icon-neutral gl-icon gl-mr-0!')
          = sprite_icon('smiley', css_class: 'award-control-icon-positive gl-icon')
          = sprite_icon('smile', css_class: 'award-control-icon-super-positive gl-icon')
    = yield
