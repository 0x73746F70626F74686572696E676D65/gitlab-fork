# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID

rspec:
  image: "ruby:${RUBY_VERSION}"
  cache:
    key: gitlab-utils-${RUBY_VERSION}
    paths:
      - gitlab-utils/vendor/ruby
  before_script:
    - cd gems/gitlab-utils
    - ruby -v                                   # Print out ruby version for debugging
    - gem install bundler --no-document         # Bundler is not installed with the image
    - bundle config set --local path 'vendor'   # Install dependencies into ./vendor/ruby
    - bundle config set with 'development'
    - bundle config set --local frozen 'true'   # Disallow Gemfile.lock changes on CI
    - bundle config                             # Show bundler configuration
    - bundle install -j $(nproc)
  script:
    - bundle exec rspec
  parallel:
    matrix:
      - RUBY_VERSION: ["2.7", "3.0", "3.1", "3.2"]
