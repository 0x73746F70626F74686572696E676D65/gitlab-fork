#import "~/graphql_shared/fragments/pageInfo.fragment.graphql"
#import "~/issues_list/queries/issue_info.fragment.graphql"

query getProjectIssues(
  $projectPath: ID!
  $search: String
  $sort: IssueSort
  $state: IssuableState
  $assigneeId: String
  $authorUsername: String
  $assigneeUsernames: [String!]
  $milestoneTitle: [String]
  $labelName: [String]
  $iterationId: [ID]
  $iterationWildcardId: IterationWildcardId
  $epicId: String
  $weight: String
  $not: NegatedIssueFilterInput
  $beforeCursor: String
  $afterCursor: String
  $firstPageSize: Int
  $lastPageSize: Int
) {
  project(fullPath: $projectPath) {
    issues(
      search: $search
      sort: $sort
      state: $state
      assigneeId: $assigneeId
      authorUsername: $authorUsername
      assigneeUsernames: $assigneeUsernames
      milestoneTitle: $milestoneTitle
      labelName: $labelName
      iterationId: $iterationId
      iterationWildcardId: $iterationWildcardId
      epicId: $epicId
      weight: $weight
      not: $not
      before: $beforeCursor
      after: $afterCursor
      first: $firstPageSize
      last: $lastPageSize
    ) {
      count
      pageInfo {
        ...PageInfo
      }
      nodes {
        ...IssueInfo
        blockedByCount
        healthStatus
        weight
      }
    }
  }
}
