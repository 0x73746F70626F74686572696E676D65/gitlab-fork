#import "~/graphql_shared/fragments/pageInfo.fragment.graphql"
#import "~/issues_list/queries/issue.fragment.graphql"

query getIssues(
  $isProject: Boolean = false
  $isSignedIn: Boolean = false
  $fullPath: ID!
  $search: String
  $sort: IssueSort
  $state: IssuableState
  $assigneeId: String
  $assigneeUsernames: [String!]
  $authorUsername: String
  $labelName: [String]
  $milestoneTitle: [String]
  $milestoneWildcardId: MilestoneWildcardId
  $types: [IssueType!]
  $epicId: String
  $iterationId: [ID]
  $iterationWildcardId: IterationWildcardId
  $weight: String
  $not: NegatedIssueFilterInput
  $beforeCursor: String
  $afterCursor: String
  $firstPageSize: Int
  $lastPageSize: Int
) {
  group(fullPath: $fullPath) @skip(if: $isProject) {
    issues(
      includeSubgroups: true
      search: $search
      sort: $sort
      state: $state
      assigneeId: $assigneeId
      assigneeUsernames: $assigneeUsernames
      authorUsername: $authorUsername
      labelName: $labelName
      milestoneTitle: $milestoneTitle
      milestoneWildcardId: $milestoneWildcardId
      types: $types
      epicId: $epicId
      iterationId: $iterationId
      iterationWildcardId: $iterationWildcardId
      weight: $weight
      not: $not
      before: $beforeCursor
      after: $afterCursor
      first: $firstPageSize
      last: $lastPageSize
    ) {
      pageInfo {
        ...PageInfo
      }
      nodes {
        ...IssueFragment
        reference(full: true)
        blockingCount
        healthStatus
        weight
      }
    }
  }
  project(fullPath: $fullPath) @include(if: $isProject) {
    issues(
      search: $search
      sort: $sort
      state: $state
      assigneeId: $assigneeId
      assigneeUsernames: $assigneeUsernames
      authorUsername: $authorUsername
      labelName: $labelName
      milestoneTitle: $milestoneTitle
      milestoneWildcardId: $milestoneWildcardId
      types: $types
      epicId: $epicId
      iterationId: $iterationId
      iterationWildcardId: $iterationWildcardId
      weight: $weight
      not: $not
      before: $beforeCursor
      after: $afterCursor
      first: $firstPageSize
      last: $lastPageSize
    ) {
      pageInfo {
        ...PageInfo
      }
      nodes {
        ...IssueFragment
        blockingCount
        healthStatus
        weight
      }
    }
  }
}
