- return if Feature.disabled?(:security_policies_policy_scope, @group)

- docs_link = tag_pair(link_to('', help_page_path('policy/experiment-beta-support'), target: '_blank', rel: 'noopener noreferrer'), :link_start, :link_end)
- terms_link = tag_pair(link_to('', gitlab_testing_agreement_url, target: '_blank', rel: 'noopener noreferrer') , :link_start, :link_end)
- toggle_security_policies_policy_scope_locked = cascading_namespace_setting_locked?(:toggle_security_policies_policy_scope, @group)

%h5
  = s_('GroupSettings|Security policy scope Experiment')
  = render 'shared/experimental_badge_tag'

%p
  = s_('GroupSettings|This feature is being developed and might be unstable.')
  = safe_format(s_('GroupSettings| %{link_start}What do Experiment and Beta mean?%{link_end}'), docs_link)

.form-group.gl-mb-3
  .gl-form-checkbox.custom-control.custom-checkbox
    = f.check_box :toggle_security_policies_policy_scope, checked: @group.namespace_settings.toggle_security_policies_policy_scope?, disabled: toggle_security_policies_policy_scope_locked, class: 'custom-control-input'
    = render 'shared/namespaces/cascading_settings/setting_label_checkbox', attribute: :toggle_security_policies_policy_scope,
        group: @group,
        form: f,
        setting_locked: toggle_security_policies_policy_scope_locked,
        settings_path_helper: ->(locked_ancestor) { edit_group_path(locked_ancestor, anchor: 'js-permissions-settings') },
        help_text: safe_format(s_('Settings|Enabling this feature allows you to scope scan result policies and scan execution policies, which determines which projects specifically will be enforced by a given policy. This features is your acceptance of the %{link_start}GitLab Testing Agreement%{link_end}.'), terms_link) do
      = s_('Settings|Security Policy Scopes')
    = render 'shared/namespaces/cascading_settings/enforcement_checkbox',
        attribute: :toggle_security_policies_policy_scope,
        group: @group,
        form: f,
        setting_locked: toggle_security_policies_policy_scope_locked
