- root_namespace = resource.root_ancestor
- return unless show_duo_chat_ga_alert?(root_namespace)
- tracking_label = 'duo_chat_ga_alert'

- content_for :page_level_alert do
  %div{ class: [container_class, @content_class, 'gl-pt-5!'], data: { track_action: 'render', track_label: tracking_label } }
    = render Pajamas::BannerComponent.new(close_options: { data: { testid: 'hide-duo-chat-ga-alert', track_action: 'dismiss', track_label: tracking_label },
        'aria-label' => s_('DuoChatGAAlert|Dismiss Duo Chat GA banner') },
      banner_options: { class: 'js-duo-chat-ga-alert',
        data: { feature_id: ::EE::Users::CalloutsHelper::DUO_CHAT_GA_ALERT,
          dismiss_endpoint: callouts_path,
          testid: 'duo-chat-ga-alert'} }) do |c|
      - c.with_illustration do
        = image_tag image_path('illustrations/tanuki-ai-md.svg'), alt: 'Tanuki AI Logo', class: 'gl-p-3 gl-rounded-lg bg-duo-pro rounded-bottom-right-9'
      - c.with_title do
        = s_('DuoChatGAAlert|GitLab Duo Chat is generally available today')
      - c.with_primary_action do
        = render Pajamas::ButtonComponent.new(variant: :confirm, button_options: { class: 'gl-mr-3 js-close js-tanuki-bot-chat-ga-alert-toggle', data: { track_action: 'click_button', track_label: tracking_label} }) do
          = s_('DuoChatGAAlert|Use GitLab Duo Chat')

        = render Pajamas::ButtonComponent.new(href: help_page_path('user/gitlab_duo_chat', anchor: 'use-gitlab-duo-chat-in-the-web-ide'), target: "_blank") do
          = s_('DuoChatGAAlert|Access Chat in the IDE')

      %p= s_('DuoChatGAAlert|Access a broad range of GitLab Duo features with your personal chat assistant in the UI of GitLab.com. You can also use Chat to access Code explanation, Code refactoring, and Test generation in your preferred IDE. Later this year, a paid add-on subscription will be required to access GitLab Duo Chat.')
