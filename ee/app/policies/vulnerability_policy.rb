# frozen_string_literal: true

class VulnerabilityPolicy < BasePolicy
  delegate { @subject.project }

  # Only users who can read vulnerability can comment.
  # It would not be safe to prevent :create_note in project policy,
  # since note permissions are shared, and this can have ripple effect on other parts.
  rule { ~can?(:read_security_resource) }.prevent :create_note
  rule { can?(:read_security_resource) }.enable :read_vulnerability

  condition(:explain_vulnerability_enabled, scope: :subject) do
    subject&.finding.present? &&
      ::Gitlab::Llm::FeatureAuthorizer.new(
        container: subject&.project,
        feature_name: :explain_vulnerability
      ).allowed?
  end

  condition(:resolve_vulnerability_enabled, scope: :subject) do
    ::Feature.enabled?(:resolve_vulnerability_ai, subject&.project) &&
      subject&.finding.present? &&
      ::Gitlab::Llm::FeatureAuthorizer.new(
        container: subject&.project,
        feature_name: :resolve_vulnerability
      ).allowed?
  end

  rule { explain_vulnerability_enabled & can?(:read_security_resource) }.enable(:explain_vulnerability)
  rule { resolve_vulnerability_enabled & can?(:read_security_resource) }.enable(:resolve_vulnerability)
end
