# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Llm::ExplainVulnerabilityService, :saas, feature_category: :vulnerability_management do
  describe '#execute' do
    include_context 'in llm vulnerability service execute' do
      let(:ability_name) { :explain_vulnerability_with_ai }
    end

    before do
      allow(Llm::CompletionWorker).to receive(:perform_for)
    end

    context 'when the user is permitted to explain the vulnerability' do
      let(:resource) { vulnerability }
      let(:action_name) { :explain_vulnerability }
      let(:content) { 'Explain vulnerability' }
      let(:allowed) { true }

      before do
        # Llm::BaseService checks for membership to parent group
        namespace.add_developer(user)
      end

      it_behaves_like 'schedules completion worker'
    end

    context 'when the user is not permitted to view the vulnerability' do
      let(:allowed) { false }

      it 'returns an error' do
        expect(subject.execute).to be_error

        expect(Llm::CompletionWorker).not_to have_received(:perform_for)
      end
    end
  end
end
