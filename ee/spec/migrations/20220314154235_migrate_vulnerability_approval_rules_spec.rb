# frozen_string_literal: true

require 'spec_helper'
require_migration!

RSpec.describe MigrateVulnerabilityApprovalRules do
  let(:namespaces) { table(:namespaces)}
  let(:namespace) { namespaces.create!(name: 'foo', path: 'foo')}
  let(:projects) {table(:projects)}
  let(:project) {projects.create!(namespace_id: namespace.id)}
  let(:approval_project_rules) { table(:approval_project_rules) }
  let(:vulnerability_rule) do
    approval_project_rules.create!(name: 'Vulnerability-Check', report_type: 1, rule_type: 2, project_id: project.id)
  end

  let(:code_coverage_rule) do
    approval_project_rules.create!(name: 'Coverage-Check', report_type: 3, rule_type: 2, project_id: project.id)
  end

  describe '#up' do
    let(:expected_delay) { 0.seconds }

    it 'schedules an async job for the vulnerability rule' do
      expect(Security::GenerateScanFindingRulesWorker).to receive(:perform_in)
        .with(expected_delay, vulnerability_rule.id)

      migrate!
    end

    it 'does not schedule an async job for other rule types' do
      expect(Security::GenerateScanFindingRulesWorker).not_to receive(:perform_in)
        .with(expected_delay, code_coverage_rule.id)

      migrate!
    end
  end
end
