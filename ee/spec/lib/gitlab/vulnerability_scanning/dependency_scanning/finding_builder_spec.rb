# frozen_string_literal: true

require "spec_helper"

RSpec.describe Gitlab::VulnerabilityScanning::DependencyScanning::FindingBuilder, feature_category: :software_composition_analysis do
  let(:ci_build) { build(:ci_build) }
  let(:sbom) { build(:ci_reports_sbom_report, source: sbom_source) }
  let(:now) { Time.zone.now }
  let(:security_report_type) { "dependency_scanning" }
  let(:security_report) { Gitlab::Ci::Reports::Security::Report.new(security_report_type, ci_build.pipeline, now) }

  let(:component) do
    build(:ci_reports_sbom_component, name: "github.com/minio/minio", version: "v0.0.0-20180419184637-5a16671f721f",
      purl_type: "golang")
  end

  let(:advisory) do
    build(:pm_advisory,
      published_date: "2018-06-26",
      title: "Allocation of File Descriptors or Handles Without Limits or Throttling",
      description: "Minio a Allocation of Memory Without Limits or Throttling vulnerability in write-to-RAM.",
      cvss_v2: "AV:N/AC:L/Au:N/C:N/I:N/A:P",
      cvss_v3: "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      identifiers: [
        build(:pm_identifier, type: "cve", name: "CVE-2018-1000538",
          url: "https://nvd.nist.gov/vuln/detail/CVE-2018-1000538", value: "CVE-2018-1000538")
      ],
      urls: ["https://nvd.nist.gov/vuln/detail/CVE-2018-1000538", "https://github.com/minio/minio/pull/5957"])
  end

  subject(:builder) { described_class.new(ci_build, sbom, security_report, component, advisory) }

  describe "#finding" do
    let(:finding) { builder.finding }

    context "when cyclonedx sbom contains required gitlab:dependency_scanning properties" do
      let(:sbom_source) { build(:ci_reports_sbom_source, input_file_path: "go.mod", source_file_path: "go.mod") }

      it "does not add any errors to the report" do
        expect(security_report.errored?).to eq(false)
      end

      it "creates the links" do
        expect(finding.links).to match_array([
          have_attributes(url: "https://nvd.nist.gov/vuln/detail/CVE-2018-1000538"),
          have_attributes(url: "https://github.com/minio/minio/pull/5957")
        ])
      end

      it "creates the name" do
        expect(finding.name).to eq(advisory.title)
      end

      it "creates the description" do
        expect(finding.description).to eq(advisory.description)
      end

      it "creates a valid location" do
        expect(finding.location).to have_attributes(
          file_path: "go.mod",
          package_name: "github.com/minio/minio",
          package_version: "v0.0.0-20180419184637-5a16671f721f"
        )
      end

      it "creates the severity" do
        expect(finding.severity).to eq("high")
      end

      it "creates the confidence" do
        expect(finding.confidence).to eq("unknown")
      end

      it "creates the metadata version" do
        expect(finding.metadata_version).to eq("0.0.0")
      end
    end

    context "when cyclonedx does not contain required gitlab:dependency_scanning properties" do
      let(:sbom_source) { build(:ci_reports_sbom_source, input_file_path: nil, source_file_path: nil) }

      before do
        builder.finding
      end

      it "adds an error to the generated report" do
        expect(security_report.errored?).to eq(true)
        expect(security_report.errors).to match_array([
          { type: "ContinuousDependencyScanning",
            message: "Missing required gitlab:dependency_scanning CycloneDX properties" }
        ])
      end
    end
  end
end
