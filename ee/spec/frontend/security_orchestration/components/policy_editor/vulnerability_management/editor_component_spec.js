import { shallowMountExtended } from 'helpers/vue_test_utils_helper';
import { DEFAULT_ASSIGNED_POLICY_PROJECT } from 'ee/security_orchestration/constants';
import EditorComponent from 'ee/security_orchestration/components/policy_editor/vulnerability_management/editor_component.vue';
import EditorLayout from 'ee/security_orchestration/components/policy_editor/editor_layout.vue';

describe('EditorComponent', () => {
  let wrapper;
  const defaultProjectPath = 'path/to/project';

  const factory = ({ propsData = {}, provide = {} } = {}) => {
    wrapper = shallowMountExtended(EditorComponent, {
      propsData: {
        assignedPolicyProject: DEFAULT_ASSIGNED_POLICY_PROJECT,
        ...propsData,
      },
      provide: {
        namespacePath: defaultProjectPath,
        ...provide,
      },
    });
  };

  const findPolicyEditorLayout = () => wrapper.findComponent(EditorLayout);

  it('renders the default policy editor layout', () => {
    factory();
    const editorLayout = findPolicyEditorLayout();
    expect(editorLayout.exists()).toBe(true);
    expect(editorLayout.props()).toMatchObject({
      policy: {},
      yamlEditorValue: '',
      isEditing: false,
      isRemovingPolicy: false,
      isUpdatingPolicy: false,
      hasParsingError: false,
      parsingError: '',
    });
  });
});
