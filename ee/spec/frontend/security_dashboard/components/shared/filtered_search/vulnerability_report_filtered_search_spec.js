import { GlFilteredSearch } from '@gitlab/ui';
import { mountExtended } from 'helpers/vue_test_utils_helper';
import FilteredSearch from 'ee/security_dashboard/components/shared/filtered_search/vulnerability_report_filtered_search.vue';
import StatusToken from 'ee/security_dashboard/components/shared/filtered_search/tokens/status_token.vue';
import { OPERATORS_IS } from '~/vue_shared/components/filtered_search_bar/constants';

describe('Vulnerability Report Filtered Search component', () => {
  let wrapper;

  const findFilteredSearchComponent = () => wrapper.findComponent(GlFilteredSearch);

  const createWrapper = () => {
    wrapper = mountExtended(FilteredSearch);
  };

  beforeEach(() => {
    createWrapper();
  });

  it('should mount the component with the correct config', () => {
    const filteredSearch = findFilteredSearchComponent();

    expect(filteredSearch.props('placeholder')).toEqual('Search or filter vulnerabilities...');

    expect(filteredSearch.props('value')).toEqual([
      {
        type: 'status',
        value: {
          data: StatusToken.DEFAULT_VALUES,
          operator: '=',
        },
      },
    ]);

    expect(filteredSearch.props('availableTokens')).toEqual([
      {
        type: 'status',
        title: 'Status',
        multiSelect: true,
        unique: true,
        token: StatusToken,
        operators: OPERATORS_IS,
      },
    ]);
  });
});
