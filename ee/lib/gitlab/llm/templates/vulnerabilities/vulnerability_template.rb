# frozen_string_literal: true

module Gitlab
  module Llm
    module Templates
      module Vulnerabilities
        class VulnerabilityTemplate
          include Gitlab::Utils::StrongMemoize

          MAX_CODE_LENGTH = 1_024

          def initialize(vulnerability, params = {})
            @vulnerability = vulnerability
            @params = params
          end

          private

          attr_reader :vulnerability

          delegate :title, :description, :file, to: :vulnerability
          delegate :source_code?, :vulnerable_code, to: :finding

          def identifiers
            finding.identifier_names.join(", ")
          end

          def finding
            vulnerability.finding
          end
          strong_memoize_attr :finding

          def filename
            File.basename(file)
          end

          def max_code_length
            MAX_CODE_LENGTH
          end

          def ensure_eligible_code!
            raise PromptError, "Unable to locate source code for vulnerability" unless source_code?

            if vulnerable_code.length > max_code_length
              raise PromptError, "Vulnerable code exceeds maximum length (#{max_code_length})"
            end

            raise PromptError, "Refusing to send possible secrets in AI prompt" if vulnerability.secret_detection?
          end
        end
      end
    end
  end
end
